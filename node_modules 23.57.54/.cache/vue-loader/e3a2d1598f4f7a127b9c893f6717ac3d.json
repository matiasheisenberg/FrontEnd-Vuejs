{"remainingRequest":"/Users/matiascasullo/Downloads/proyecto-nt2-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matiascasullo/Downloads/proyecto-nt2-master/src/components/Vendedor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/matiascasullo/Downloads/proyecto-nt2-master/src/components/Vendedor.vue","mtime":1575849534000},{"path":"/Users/matiascasullo/Downloads/proyecto-nt2-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matiascasullo/Downloads/proyecto-nt2-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matiascasullo/Downloads/proyecto-nt2-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matiascasullo/Downloads/proyecto-nt2-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      añoMinimo: null,\n      añoMaximo: 2019,\n      modalShow: localStorage.getItem('usuarioEncontrado') ? false : true,\n      loading: false,\n      auto: {\n        coords: { lat: null, lng: null },\n        precio: null,\n        km: null,\n        marca: null,\n        modelo: null,\n        ano: null,\n        foto: null,\n        color: null,\n        nombreContacto: null,\n        telefonoContacto: null,\n        emailContacto: null,\n        residenciaContacto: null,\n        dniContacto: null,\n      },\n      dniIngresado: localStorage.getItem('usuarioEncontrado') ? JSON.parse(localStorage.getItem('usuarioDni')) : null,\n      dniIngresadoState: null,\n      usuarioEncontrado: localStorage.getItem('usuarioEncontrado') ? JSON.parse(localStorage.getItem('usuarioEncontrado')) : false,\n      arrayDeMarcas: [],\n      vendedores: [],\n      markers: [],\n    };\n  },\n  created: function() {\n    // Hacemos todo lo necesario antes de que se vea la pagina.\n    let añoMinimoDesdeServicio = 1885 // VENDRIA DESDE UN SERVICIO\n    let añoMaximoDesdeServicio = 2019 // VENDRIA DESDE UN SERVICIO\n    this.añoMinimo = añoMinimoDesdeServicio;\n    this.añoMaximo = añoMaximoDesdeServicio;\n\n    axios.get('http://localhost:3000/marcas')\n      .then((response) => {\n        this.arrayDeMarcas = response.data;\n      })\n\n    axios.get('http://localhost:3000/vendedores')\n      .then((response) => {\n        this.vendedores = response.data;\n      })\n\n     axios.get('http://localhost:3000/markers')\n      .then((response) => {\n        this.markers = response.data;\n      })\n  },\n  // define métodos dentro del objeto `methods`\n  methods: {\n    checkFormValidity() {\n      const valid = this.$refs.form.checkValidity();\n\n      this.auto.dniState = valid ? 'valid' : 'invalid';\n\n      return valid;\n    },\n    handleModalOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault();\n\n      // Trigger submit handler\n      this.handleModalSubmit();\n    },\n    handleAutenticacion() {\n      const usuario = this.vendedores.find(vendedor => vendedor.dniContacto === parseInt(this.dniIngresado));\n      \n      if (usuario) {\n        this.usuarioEncontrado = true;\n        this.auto.nombreContacto = usuario.nombreContacto;\n        this.auto.telefonoContacto = usuario.telefonoContacto;\n        this.auto.emailContacto = usuario.emailContacto;\n        this.auto.residenciaContacto = usuario.residenciaContacto;\n        this.auto.dniContacto = usuario.dniContacto;\n\n        this.$bvToast.toast(`Es bueno verte volver`, {\n          title: `Hola, ${usuario.nombreContacto}`,\n          variant: 'success',\n          toaster: 'b-toaster-top-center',\n          solid: true\n        });\n      } else {\n        this.$bvToast.toast(`Asegurate de agregar tus datos al publicar un vehiculo`, {\n          title: `No encontramos cuenta con tus datos`,\n          variant: 'danger',\n          toaster: 'b-toaster-top-center',\n          solid: true\n        });\n      }\n\n      localStorage.setItem('usuarioEncontrado', this.usuarioEncontrado);\n      localStorage.setItem('usuarioDni', this.auto.dniContacto);\n\n      this.modalShow = false;\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.modal.hide()\n      });\n    },\n    handleModalSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return\n      }\n      \n      // Show loader\n      this.loading = true;\n\n      this.handleAutenticacion();\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      \n      const usuario = this.vendedores.find(vendedor => vendedor.dniContacto === this.dniIngresado);\n\n      this.auto.coords.lat = parseFloat(this.auto.coords.lat);\n      this.auto.coords.lng = parseFloat(this.auto.coords.lng);\n      this.auto.marca = this.auto.marca.texto;\n      this.auto.id = this.markers[this.markers.length - 1].id + 1;\n\n      // Subimos los datos del vendedor si no existe\n      // Si existe cargamos los datos del vendedor\n      if (!this.usuarioEncontrado) {\n        axios.post('http://localhost:3000/vendedores', {\n          id: this.vendedores[this.vendedores.length - 1].id + 1,\n          nombreContacto: this.auto.nombreContacto,\n          telefonoContacto: parseInt(this.auto.telefonoContacto),\n          emailContacto: this.auto.emailContacto,\n          residenciaContacto: this.auto.residenciaContacto,\n          dniContacto: parseInt(this.auto.dniContacto),\n        });\n      } else {\n        this.auto.nombreContacto = usuario.nombreContacto;\n        this.auto.telefonoContacto = usuario.telefonoContacto;\n        this.auto.emailContacto = usuario.emailContacto;\n        this.auto.residenciaContacto = usuario.residenciaContacto;\n        this.auto.dniContacto = parseInt(usuario.dniContacto);\n      }\n\n      // Subimos los datos del nuevo marker\n      axios.post('http://localhost:3000/markers', this.auto);\n\n      // Mostramos un mensaje de exito\n      this.$bvToast.toast(`Se publico el vehiculo correctamente`, {\n        title: `Publicacion exitosa!!!`,\n        variant: 'success',\n        solid: true\n      });\n    },\n  },\n};\n",{"version":3,"sources":["Vendedor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Vendedor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Complete los siguientes datos obligatorios</h1>\n    <b-container fluid>\n      <b-form @submit=\"onSubmit\">\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Marca del auto</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <select required class=\"custom-select\" v-model=\"auto.marca\">\n              <option disabled :value=\"null\">Selecciona la marca del auto</option>\n              <option v-for=\"marca in arrayDeMarcas\" :key=\"marca.id\" :value=\"marca\">{{marca.texto}}</option>\n            </select>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\" v-if=\"auto.marca != null\">\n          <b-col sm=\"3\">\n            <label>Modelo:</label>\n          </b-col>\n\n          <b-col sm=\"9\">\n            <select required class=\"custom-select\" v-model=\"auto.modelo\">\n              <option disabled :value=\"null\">Selecciona el modelo del auto</option>\n              <option\n                v-for=\"modelo in auto.marca.modelos\"\n                :key=\"modelo.id\"\n                :value=\"modelo.texto\"\n              >\n                {{modelo.texto}}\n              </option>\n            </select>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Año</label>\n          </b-col>\n\n          <b-col sm=\"9\">\n            <b-form-input required v-model=\"auto.ano\" type=\"range\" :min=\"añoMinimo\" :max=\"añoMaximo\"></b-form-input>\n            <div class=\"mt-2\">Año seleccionado: {{ auto.ano }}</div>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Kilometros:</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input type=\"number\" required placeholder=\"Ingresa los kilometros del auto\" v-model=\"auto.km\"></b-form-input>\n          </b-col>\n        </b-row>\n\n         <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Color:</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input required placeholder=\"Ingresa el color del auto\" v-model=\"auto.color\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Precio</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input type=\"number\" required placeholder=\"Ingresa el precio del auto\" v-model=\"auto.precio\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>URL de la foto del auto</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input required placeholder=\"Ingresa la url de la imagen\" v-model=\"auto.foto\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Longuitud</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input required placeholder=\"Ingresa la longitud de la ubicacion\" v-model=\"auto.coords.lng\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"my-3\">\n          <b-col sm=\"3\">\n            <label>Latitud</label>\n          </b-col>\n          <b-col sm=\"9\">\n            <b-form-input required placeholder=\"Ingresa la latitud de la ubicacion\" v-model=\"auto.coords.lat\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <hr />\n\n        <div v-if=\"!usuarioEncontrado\">\n          <b-row class=\"my-3\">\n            <b-col sm=\"3\">\n              <label>Nombre</label>\n            </b-col>\n            <b-col sm=\"9\">\n              <b-form-input required placeholder=\"Ingresa tu nombre\" v-model=\"auto.nombreContacto\"></b-form-input>\n            </b-col>\n          </b-row>\n\n          <b-row class=\"my-3\">\n            <b-col sm=\"3\">\n              <label>Telefono de contacto</label>\n            </b-col>\n            <b-col sm=\"9\">\n              <b-form-input type=\"number\" required placeholder=\"Ingresa un dato de contacto\" v-model=\"auto.telefonoContacto\"></b-form-input>\n            </b-col>\n          </b-row>\n\n          <b-row class=\"my-3\">\n            <b-col sm=\"3\">\n              <label>Email de contacto</label>\n            </b-col>\n            <b-col sm=\"9\">\n              <b-form-input type=\"email\" required placeholder=\"Ingresa un email\" v-model=\"auto.emailContacto\"></b-form-input>\n            </b-col>\n          </b-row>\n\n          <b-row class=\"my-3\">\n            <b-col sm=\"3\">\n              <label>Lugar de residencia</label>\n            </b-col>\n            <b-col sm=\"9\">\n              <b-form-input required placeholder=\"Ingresa un lugar de residencia\" v-model=\"auto.residenciaContacto\"></b-form-input>\n            </b-col>\n          </b-row>\n\n          <b-row class=\"my-3\">\n            <b-col sm=\"3\">\n              <label>DNI</label>\n            </b-col>\n            <b-col sm=\"9\">\n              <b-form-input required placeholder=\"Ingresa su DNI\" v-model=\"auto.dniContacto\"></b-form-input>\n            </b-col>\n          </b-row>\n        </div>\n\n        <b-button size=\"lg\" type=\"submit\" variant=\"primary\" class=\"mb-2\">Publicar el auto</b-button>\n\n      </b-form>\n\n       <b-modal\n        ok-only\n        no-close-on-backdrop\n        ref=\"modal\"\n        v-model=\"modalShow\"\n        title=\"Aseguremos tu identidad\"\n        @ok=\"handleModalOk\"\n      >\n        <form ref=\"form\" @submit.stop.prevent=\"handleModalSubmit\">\n          <b-spinner v-if=\"loading\" label=\"Spinning\"></b-spinner>\n          <b-form-group\n            :state=\"dniIngresadoState\"\n            label=\"DNI\"\n            label-for=\"dni-input\"\n            invalid-feedback=\"El DNI es requerido\"\n            v-if=\"!loading\"\n          >\n            <b-form-input\n              id=\"dni-input\"\n              v-model=\"dniIngresado\"\n              :state=\"dniIngresadoState\"\n              required\n            ></b-form-input>\n          </b-form-group>\n        </form>\n      </b-modal>\n    </b-container>\n\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      añoMinimo: null,\n      añoMaximo: 2019,\n      modalShow: localStorage.getItem('usuarioEncontrado') ? false : true,\n      loading: false,\n      auto: {\n        coords: { lat: null, lng: null },\n        precio: null,\n        km: null,\n        marca: null,\n        modelo: null,\n        ano: null,\n        foto: null,\n        color: null,\n        nombreContacto: null,\n        telefonoContacto: null,\n        emailContacto: null,\n        residenciaContacto: null,\n        dniContacto: null,\n      },\n      dniIngresado: localStorage.getItem('usuarioEncontrado') ? JSON.parse(localStorage.getItem('usuarioDni')) : null,\n      dniIngresadoState: null,\n      usuarioEncontrado: localStorage.getItem('usuarioEncontrado') ? JSON.parse(localStorage.getItem('usuarioEncontrado')) : false,\n      arrayDeMarcas: [],\n      vendedores: [],\n      markers: [],\n    };\n  },\n  created: function() {\n    // Hacemos todo lo necesario antes de que se vea la pagina.\n    let añoMinimoDesdeServicio = 1885 // VENDRIA DESDE UN SERVICIO\n    let añoMaximoDesdeServicio = 2019 // VENDRIA DESDE UN SERVICIO\n    this.añoMinimo = añoMinimoDesdeServicio;\n    this.añoMaximo = añoMaximoDesdeServicio;\n\n    axios.get('http://localhost:3000/marcas')\n      .then((response) => {\n        this.arrayDeMarcas = response.data;\n      })\n\n    axios.get('http://localhost:3000/vendedores')\n      .then((response) => {\n        this.vendedores = response.data;\n      })\n\n     axios.get('http://localhost:3000/markers')\n      .then((response) => {\n        this.markers = response.data;\n      })\n  },\n  // define métodos dentro del objeto `methods`\n  methods: {\n    checkFormValidity() {\n      const valid = this.$refs.form.checkValidity();\n\n      this.auto.dniState = valid ? 'valid' : 'invalid';\n\n      return valid;\n    },\n    handleModalOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault();\n\n      // Trigger submit handler\n      this.handleModalSubmit();\n    },\n    handleAutenticacion() {\n      const usuario = this.vendedores.find(vendedor => vendedor.dniContacto === parseInt(this.dniIngresado));\n      \n      if (usuario) {\n        this.usuarioEncontrado = true;\n        this.auto.nombreContacto = usuario.nombreContacto;\n        this.auto.telefonoContacto = usuario.telefonoContacto;\n        this.auto.emailContacto = usuario.emailContacto;\n        this.auto.residenciaContacto = usuario.residenciaContacto;\n        this.auto.dniContacto = usuario.dniContacto;\n\n        this.$bvToast.toast(`Es bueno verte volver`, {\n          title: `Hola, ${usuario.nombreContacto}`,\n          variant: 'success',\n          toaster: 'b-toaster-top-center',\n          solid: true\n        });\n      } else {\n        this.$bvToast.toast(`Asegurate de agregar tus datos al publicar un vehiculo`, {\n          title: `No encontramos cuenta con tus datos`,\n          variant: 'danger',\n          toaster: 'b-toaster-top-center',\n          solid: true\n        });\n      }\n\n      localStorage.setItem('usuarioEncontrado', this.usuarioEncontrado);\n      localStorage.setItem('usuarioDni', this.auto.dniContacto);\n\n      this.modalShow = false;\n\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.modal.hide()\n      });\n    },\n    handleModalSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return\n      }\n      \n      // Show loader\n      this.loading = true;\n\n      this.handleAutenticacion();\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      \n      const usuario = this.vendedores.find(vendedor => vendedor.dniContacto === this.dniIngresado);\n\n      this.auto.coords.lat = parseFloat(this.auto.coords.lat);\n      this.auto.coords.lng = parseFloat(this.auto.coords.lng);\n      this.auto.marca = this.auto.marca.texto;\n      this.auto.id = this.markers[this.markers.length - 1].id + 1;\n\n      // Subimos los datos del vendedor si no existe\n      // Si existe cargamos los datos del vendedor\n      if (!this.usuarioEncontrado) {\n        axios.post('http://localhost:3000/vendedores', {\n          id: this.vendedores[this.vendedores.length - 1].id + 1,\n          nombreContacto: this.auto.nombreContacto,\n          telefonoContacto: parseInt(this.auto.telefonoContacto),\n          emailContacto: this.auto.emailContacto,\n          residenciaContacto: this.auto.residenciaContacto,\n          dniContacto: parseInt(this.auto.dniContacto),\n        });\n      } else {\n        this.auto.nombreContacto = usuario.nombreContacto;\n        this.auto.telefonoContacto = usuario.telefonoContacto;\n        this.auto.emailContacto = usuario.emailContacto;\n        this.auto.residenciaContacto = usuario.residenciaContacto;\n        this.auto.dniContacto = parseInt(usuario.dniContacto);\n      }\n\n      // Subimos los datos del nuevo marker\n      axios.post('http://localhost:3000/markers', this.auto);\n\n      // Mostramos un mensaje de exito\n      this.$bvToast.toast(`Se publico el vehiculo correctamente`, {\n        title: `Publicacion exitosa!!!`,\n        variant: 'success',\n        solid: true\n      });\n    },\n  },\n};\n</script>"]}]}